How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because viewing diff is more easy and efficient way to see the bug, than looking at the entire content of file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros: commit can be more meaningful than automatic commit.
    cons: 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think allowing saving multiple files in one commit make it possible to track 'status' changes of the project. 

How can you use the commands git log and git diff to view the history of files?

    'git log' shows commit history and 'git diff' compares two commits.

How might using version control make you more confident to make changes that
could break something?

    Because using version control makes it possible to roll back changes whenever I want to.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to version control my personal projects.
